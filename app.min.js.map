{"version":3,"sources":["webpack:///./src/data/constants/ActionType.js","webpack:///./src/data/reducers/posts.js","webpack:///./src/data/reducers/index.js","webpack:///./src/data/store.js","webpack:///./src/components/DisclosurePage/index.jsx","webpack:///./src/data/actions/index.js","webpack:///./src/components/PostsPage/index.jsx","webpack:///./src/containers/CurrentPostsPage.jsx","webpack:///./src/index.jsx"],"names":["STARTED_FETCHING_POSTS","GET_POSTS","FINISHED_FETCHING_POSTS","_ActionType","__webpack_require__","state","arguments","length","undefined","posts","startedFetching","finishedFetching","action","type","_extends","_redux","_posts","rootReducer","combineReducers","_logOnlyInProduction","_reduxLogger","loggerMiddleware","createLogger","store","createStore","_reducers2","default","composeWithDevTools","applyMiddleware","_reduxThunk2","_react","_react2","createElement","className","startedFetchingPosts","finishedFetchingPosts","getPosts","data","fetchPosts","dispatch","fetch","then","response","json","_paragon","PostItem","_ref","title","body","PostsList","_ref2","slice","map","post","key","id","PostsPage","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","onChange","bind","checked","Component","_this2","setState","CheckBox","name","label","defaultProps","propTypes","_propTypes2","string","arrayOf","object","func","_reactRedux","_PostsPage","_actions","CurrentPostsPage","connect","_PostsPage2","_reactRouterDom","_reactDom2","render","Provider","_store2","BrowserRouter","Link","to","Switch","Route","exact","path","component","_CurrentPostsPage2","_DisclosurePage2","document","getElementById"],"mappings":"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","file":"app.min.js","sourcesContent":["export const STARTED_FETCHING_POSTS = 'STARTED_FETCHING_POSTS';\nexport const GET_POSTS = 'GET_POSTS';\nexport const FINISHED_FETCHING_POSTS = 'FINISHED_FETCHING_POSTS';\n","import { GET_POSTS, STARTED_FETCHING_POSTS, FINISHED_FETCHING_POSTS } from '../constants/ActionType';\n\nconst posts = (state = { posts: [], startedFetching: false, finishedFetching: false }, action) => {\n  switch (action.type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    case STARTED_FETCHING_POSTS:\n      return {\n        ...state,\n        startedFetching: true,\n        finishedFetching: false,\n      };\n    case FINISHED_FETCHING_POSTS:\n      return {\n        ...state,\n        startedFetching: false,\n        finishedFetching: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nconst rootReducer = combineReducers({\n  posts,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport { createLogger } from 'redux-logger';\n\nimport reducers from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(thunkMiddleware, loggerMiddleware)),\n);\n\nexport default store;\n","import React from 'react';\n\nconst DisclosurePage = () => (\n  <div>\n    <h1 className=\"alert alert-primary\">Some Disclosure Page</h1>\n    <p>Blahblahblahblahblahblah</p>\n    <ul>\n      <li>Agree to this</li>\n      <li>Agree to this</li>\n      <li>Also agree to this</li>\n    </ul>\n  </div>\n);\n\nexport default DisclosurePage;\n","import 'whatwg-fetch';\n\nimport {\n  STARTED_FETCHING_POSTS,\n  GET_POSTS,\n  FINISHED_FETCHING_POSTS,\n} from '../constants/ActionType';\n\nexport const startedFetchingPosts = () => (\n  {\n    type: STARTED_FETCHING_POSTS,\n  }\n);\n\nexport const finishedFetchingPosts = () => (\n  {\n    type: FINISHED_FETCHING_POSTS,\n  }\n);\n\nexport const getPosts = data => (\n  {\n    type: GET_POSTS,\n    posts: data,\n  }\n);\n\nexport const fetchPosts = () => (\n  (dispatch) => {\n    dispatch(startedFetchingPosts());\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      // TODO: handle response error\n      .then(response => response.json())\n      .then((data) => {\n        dispatch(getPosts(data));\n        dispatch(finishedFetchingPosts());\n      });\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckBox } from '@edx/paragon';\n\nconst PostItem = ({ title, body }) => (\n  <div className=\"post\">\n    <h3>{title}</h3>\n    <span>{body}</span>\n  </div>\n);\n\nconst PostsList = ({ posts }) => (\n  <ul>\n    {\n      posts\n        .slice(10)\n        .map(post => (\n          <li key={post.id}>\n            <PostItem title={post.title} body={post.body} />\n          </li>\n        ))\n    }\n  </ul>\n);\n\nclass PostsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n\n    this.state = {\n      checked: false,\n    };\n  }\n\n  onChange() {\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.state.checked) {\n        this.props.onChange();\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Posts</h1>\n        <div>\n          <CheckBox\n            name=\"activate-posts\"\n            label=\"See Posts\"\n            checked={this.state.checked}\n            onChange={this.onChange}\n          />\n        </div>\n        <div>\n          {\n            this.state.checked\n            && <PostsList posts={this.props.posts} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nPostItem.defaultProps = {\n  title: '',\n  body: '',\n};\n\nPostItem.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n};\n\nPostsList.defaultProps = {\n  posts: [],\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n};\n\nPostsPage.defaultProps = {\n  posts: [],\n  onChange: () => {},\n};\n\nPostsPage.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  onChange: PropTypes.func,\n};\n\nexport default PostsPage;\n","import { connect } from 'react-redux';\nimport PostsPage from '../components/PostsPage';\nimport { fetchPosts } from '../data/actions';\n\nconst mapStateToProps = state => (\n  {\n    posts: state.posts.posts,\n  }\n);\n\nconst mapDispatchToProps = dispatch => (\n  {\n    onChange: () => (\n      dispatch(fetchPosts())\n    ),\n  }\n);\n\nconst CurrentPostsPage = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PostsPage);\n\nexport default CurrentPostsPage;\n","import 'babel-polyfill'; // general ES2015 polyfill (e.g. promise)\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport CurrentPostsPage from './containers/CurrentPostsPage';\nimport DisclosurePage from './components/DisclosurePage';\nimport store from './data/store';\nimport './App.scss';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <header>\n          <nav>\n            <ul className=\"nav\">\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\">Home</Link></li>\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/posts\">Posts</Link></li>\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/disclosure\">Disclosure</Link></li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={() => <span>Hello World</span>} />\n            <Route path=\"/posts\" component={CurrentPostsPage} />\n            <Route path=\"/disclosure\" component={DisclosurePage} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}